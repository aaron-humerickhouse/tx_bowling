version: 2.1
orbs:
  ruby: circleci/ruby@0.1.2

#############
# Executors #
#############
executors:
  ruby:
    docker:
      - image: circleci/ruby:2.6.5-stretch-node
        environment:
          RAILS_ENV: test
          PSQL_DATABASE_HOST: 127.0.0.1
          PSQL_DATABASE_USERNAME: psql_user
          PSQL_DATABASE_PASSWORD: magic
      - image: circleci/postgres:10
        environment:
          POSTGRES_USER: psql_user
          POSTGRES_PASSWORD: magic
          POSTGRES_DB: tx_bowling_test

############
# Commands #
############
commands:
  bundle_install:
    steps:
      - run:
          name: Force Bundler Version
          command: |
            sudo gem update --system
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler
      - restore_cache:
          keys:
            - v1-tx_bowling-{{ arch }}-{{ checksum "Gemfile.lock" }}
            # if cache for exact version of `Gemfile.lock` is not present then load any most recent one
            - v1-tx_bowling-
      - run: bundle install --path vendor/bundle
      - save_cache:
          key: v1-tx_bowling-{{ arch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
  yarn_install:
    steps:
      - restore_cache:
          keys:
            - v3-tx_bowling-{{ arch }}-{{ checksum "./ui/yarn.lock" }}
            # if cache for exact version of `yarn.lock` is not present then load any most recent one
            - v3-tx_bowling-
      - run: cd ui && yarn install
      - save_cache:
          key: v3-tx_bowling-{{ arch }}-{{ checksum "./ui/yarn.lock" }}
          paths:
            - ./ui/node_modules
  setup_database:
    steps:
      - run: bundle exec rake db:create db:schema:load --trace
  create_pacts:
    steps:
      - run: sudo chmod 775 /usr/local/bundle
      - run: cp ./ui/.env-example ./ui/.env
      - run: unset BUNDLE_APP_CONFIG && cd ui && yarn pact:test
      - store_artifacts:
          path: ./ui/pact/pacts
  verify_pacts:
    steps:
      - run: bundle exec rake pact:verify

########
# Jobs #
########
jobs:
  static_analysis:
    executor: ruby
    resource_class: small
    steps:
      - checkout
      - bundle_install
      - run:
          name: rubycritic
          command: bundle exec rake ci:rubycritic
      - run: bundle exec rails_best_practices -o .*^[node_modules].*\.rb -c ./rails_best_practices.yml
      - run: bundle exec fasterer
      - run: bundle exec rubocop
  security:
    executor: ruby
    resource_class: small
    steps:
      - checkout
      - bundle_install
      - run: bundle exec brakeman
      - run: bundle exec bundler-audit
  create_contract:
    executor: ruby
    resource_class: small
    steps:
      - checkout
      - yarn_install
      - create_pacts
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: ui/pact/pacts
          # Must be relative path from root
          paths:
            - tx_bowling_-_front_end-tx_bowling_-_service.json
      - store_artifact:
          path: ./ui/pact/logs/
  verify_contract:
    executor: ruby
    resource_class: small
    steps:
      - checkout
      - bundle_install
      - setup_database
      - attach_workspace:
          at: ui/pact/pacts
      - verify_pacts
  test:
    executor: ruby
    resource_class: small
    steps:
      - checkout
      - bundle_install
      - setup_database
      - run:
          name: RSpec
          command: bundle exec rspec --format progress --format RspecJunitFormatter --out test-results/rspec/results.xml
      - store_test_results:
          path: test-results

#############
# Workflows #
#############
workflows:
  default:
    jobs:
      - static_analysis
      - security
      - test
#      - create_contract
#      - verify_contract:
#          requires:
#            - create_contract
